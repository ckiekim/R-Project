library(car)
install.packages('car')
# VIF 계산
library(car)
summary(vif(fit))
summary(vif(fit))
fit1 <- lm(Murder ~ ., data=states)
vif(fit)
# Condition Number
eigen.val <- eigen(states.cor)$values
eigen.val
sqrt(max(eigen.val)/eigen.val)
lines <- read.csv("reply1.csv", stringsAsFactors = F)
# 1. 워드 클라우드 만들기
library(rJava)
library(KoNLP)
library(stringr)
library(dplyr)
library(wordcloud)
library(ggplot2)
lines <- read.csv("reply1.csv", stringsAsFactors = F)
lines <- read.csv("D:/Workspace/R_Project/01_Crawling/reply1.csv", stringsAsFactors = F)
str(lines)
lines2 <- head(lines, 100)
raw_words <- sapply(lines, extractNoun, USE.NAMES = F)
# 발표순서 정하기
students <- c('김상규', '김영진', '김준성', '김희범', '남궁하영', '류경민',
'민다희', '박성지', '박수민', '박진원', '신은총', '안수현',
'오진영', '이경욱', '이웅희', '이희철', '임도균', '임원기',
'전수연', '조병무', '최용호', '최준혁', '황성윤')
# 개별발표
for (i in sample(x=1:23)) {
readline('Press Enter Key: ')
print(students[i])
}
# 영화 알라딘 네티즌 평점/리뷰 분석하기
# 데이터 읽기
library(rJava)
library(KoNLP)
library(xlsx)
setwd("D:/Workspace/R_Project/01_Crawling")
df_aladdin <- read.xlsx("aladdin.xlsx", 1, encoding="UTF-8")
library(stringr)
library(dplyr)
library(wordcloud)
library(wordcloud2)
library(ggplot2)
library(gridExtra)
library(lubridate)
library(extrafont)
windowsFonts(myfont = "맑은 고딕")
theme_update(text=element_text(family="myfont"))
useSejongDic()
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
lines <- read.csv("aladdin_review.csv")
lines <- as.character(lines$x)
raw_words <- sapply(lines, extractNoun, USE.NAMES = F)
words <- unlist(raw_words)
words <- str_replace_all(words, "[^[:alpha:]]", "")
words <- Filter(function(x) {nchar(x) >= 2}, words)
words <- Filter(function(x) {nchar(x) <= 10}, words)
words <- gsub(" ", "", words)
words <- gsub('[~!/@#$%&*^()"_+=?<>]', "", words)
words <- gsub('[ㄱ-ㅎ]', "", words)
words <- gsub('(ㅜ|ㅠ)', "", words)
words <- gsub("\\d+", "", words)
write(words, "aladdin_words.txt")
reviews <- read.table("aladdin_words.txt")
wordcount <- table(reviews)
head(sort(wordcount, decreasing = T), 30)
write(words, "aladdin_words.txt")
reviews <- read.table("aladdin_words.txt")
wordcount <- table(reviews)
head(sort(wordcount, decreasing = T), 30)
write(words, "aladdin_words.txt")
reviews <- read.table("aladdin_words.txt")
wordcount <- table(reviews)
head(sort(wordcount, decreasing = T), 30)
rmwords <- c('영화', '진짜', '알라딘', '관람객', '관람', '관')
for (rmword in rmwords) {
words <- gsub(rmword, "", words)
}
funwords <- c('재밌게','재밌고','재밌었','재밌어요','재밌네요',
'재밌었고','재밌었음','재밌었어요')
for (funword in funwords) {
words <- gsub(funword, '재미', words)
}
write(words, "aladdin_words.txt")
reviews <- read.table("aladdin_words.txt")
wordcount <- table(reviews)
head(sort(wordcount, decreasing = T), 30)
palete <- brewer.pal(12, 'Paired')
par(mai=rep(0,4))
set.seed(123)
wordcloud(names(wordcount), freq=wordcount,
scale = c(5,0.3), rot.per = 0.1,
min.freq = 20, random.order = F,
random.color = T, colors = palete, family="myfont")
wordcount_top <- head(sort(wordcount, decreasing = T), 300)
wordcloud2(wordcount_top, size=2, col="random-light",
backgroundColor="black", shape='circle')
wordcount_top <- head(sort(wordcount, decreasing = T), 300)
wordcloud2(wordcount_top, size=2, col="random-light",
backgroundColor="black", shape='circle')
wordcount_top <- head(sort(wordcount, decreasing = T), 200)
wordcloud2(wordcount_top, size=1, col="random-light",
backgroundColor="black", shape='circle')
tmp <- strptime(df_aladdin$time, '%Y.%m.%d')
df_aladdin$date <- as.character(tmp)
df_aladdin$hour <- as.character(strptime(df_aladdin$time, "%Y.%m.%d %H"))
df_aladdin$score <- as.numeric(as.character(df_aladdin$score))
df_aladdin$weekday <- wday(as.Date(tmp), label=T)
head(df_aladdin)
tmp <- strptime(df_aladdin$time, '%Y.%m.%d')
df_aladdin$date <- as.character(tmp)
df_aladdin$hour <- as.character(strptime(df_aladdin$time, "%Y.%m.%d %H"))
df_aladdin$score <- as.numeric(as.character(df_aladdin$score))
df_aladdin$weekday <- wday(as.Date(tmp), label=T)
head(df_aladdin)
str(weekday)
str(df_aladdin$weekday)
df_aladdin$color <- ifelse(df_aladdin$weekday %in% c('일','토'),
'red', 'grey')
head(df_aladdin)
# 2019년 5/23 ~ 7/7 까지 평점 변화
# 일별 평점 갯수
df_aladdin <- filter(df_aladdin, date !='2019-07-08')
df_aladdin$date <- str_sub(df_aladdin$date, 6)
count_review <- df_aladdin %>%
group_by(date) %>%
tally()
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1)) +
geom_bar(stat="identity", fill=df_aladdin$color) +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, color=color)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1)) +
geom_bar(stat="identity", color=df_aladdin$color) +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1)) +
geom_bar(stat="identity", colour=df_aladdin$color) +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=color)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_review
df_aladdin %>%
group_by(date)
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n())
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=color)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_review
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n())
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=color)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_review
count_review <- df_aladdin %>%
group_by(date)
count_review
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n()) %>%
mutate(color='red')
count_review
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=color)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
students2 <- c('김희범', '류경민',
'박진원', '안수현', '이경욱', '최용호')
# 개별발표
for (i in sample(x=1:6)) {
readline('Press Enter Key: ')
print(students2[i])
}
df_aladdin %>%
filter('07-01' %in% date)
df_aladdin %>%
filter('07-01' %in% date) %>%
select(date, weekday, color)
df_aladdin %>%
filter('07-01' == date) %>%
select(date, weekday, color)
df_aladdin %>%
filter('07-01' == date) %>% .[1] %>%
select(date, weekday, color)
df_aladdin %>%
filter('07-01' == date) %>% .[1]
df_aladdin %>%
filter('07-01' == date) %>% [1]
df_aladdin %>%
filter('07-01' == date) %>% .[1,]
df_aladdin %>%
filter('07-01' == date) %>% .[1,8]
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n()) %>%
mutate(color=df_aladdin %>%
filter('07-01' == date) %>% .[1,8])
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=color)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_review
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n()) %>%
mutate(color=df_aladdin %>%
filter(date == date) %>% .[1,8])
count_review
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=color)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
# 일별 평점 평균
mean_score <- df_aladdin %>%
group_by(date) %>%
summarise(mean_point = mean(score, na.rm = T))
count_score_plot
count_review
count_review
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n())
count_review
as.Date(count_review$date)
as.Date(paste0("2019-", count_review$date))
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n()) %>%
mutate(weekday = wday(as.Date(paste0("2019-", date))))
count_review
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n()) %>%
mutate(weekday = wday(as.Date(paste0("2019-", date)), label=T))
count_review
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n()) %>%
mutate(weekday = wday(as.Date(paste0("2019-", date)), label=T),
color=ifelse(weekday %in% c('일','토'), 'red', 'grey'))
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=color)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n()) %>%
mutate(weekday = wday(as.Date(paste0("2019-", date)), label=T),
group=ifelse(weekday %in% c('일','토'), '휴일', '주일'))
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=group)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=group)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n()) %>%
mutate(weekday = wday(as.Date(paste0("2019-", date)), label=T),
group=ifelse(~(weekday %in% c('일','토')), '휴일', '주일'))
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n()) %>%
mutate(weekday = wday(as.Date(paste0("2019-", date)), label=T),
group=ifelse(weekday %in% c('월','화','수','목','금'), '주일', '휴일'))
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=group)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_score_plot
count_review <- df_aladdin %>%
group_by(date) %>%
summarise(n=n()) %>%
mutate(weekday = wday(as.Date(paste0("2019-", date)), label=T),
group=ifelse(weekday %in% c('토','일'), '공휴일', '근무일'))
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=group)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
holidays <- c("01-01","03-01","05-05","06-06","08-15","10-03","10-09","12-25")
count_review <- count_review %>%
group = ifelse(date %in% holidays, '공휴일', '근무일')
count_review$group[date %in% holidays]
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=group)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_review$group[count_review$date %in% holidays]
count_review$group[count_review$date %in% holidays] <- '공휴일'
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=group)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_score_plot
# 일별 평점 평균
mean_score <- df_aladdin %>%
group_by(date) %>%
summarise(mean_point = mean(score, na.rm = T))
mean_score_plot <- ggplot(data=mean_score,
aes(x=date, y=mean_point, group=1)) +
geom_line(color = 'red') +
ggtitle('일별 평점 평균 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
grid.arrange(count_score_plot, mean_score_plot)
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=group,
show.legend=F)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=group,
show.legend=FALSE)) +
geom_bar(stat="identity") +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=group,
show.legend=FALSE)) +
geom_bar(stat="identity", show.legend=FALSE) +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
count_score_plot
count_score_plot <- ggplot(data=count_review,
aes(x=date, y=n, group=1, fill=group)) +
geom_bar(stat="identity", show.legend=F) +
ggtitle('일별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
# 일별 평점 평균
mean_score <- df_aladdin %>%
group_by(date) %>%
summarise(mean_point = mean(score, na.rm = T))
mean_score_plot <- ggplot(data=mean_score,
aes(x=date, y=mean_point, group=1)) +
geom_line(color = 'red') +
ggtitle('일별 평점 평균 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
grid.arrange(count_score_plot, mean_score_plot)
# 시간대별 평점 갯수
df_aladdin$hour <- str_sub(df_aladdin$hour, 12, 13)
count_hour <- df_aladdin %>%
group_by(hour) %>%
tally()
count_hour_plot <- ggplot(data=count_hour,
aes(x=hour, y=n, group=1)) +
geom_bar(stat="identity", fill=rainbow(24)) +
ggtitle('시간대별 평점 갯수 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
# 시간대별 평점 평균
mean_hour <- df_aladdin %>%
group_by(hour) %>%
summarise(mean_hour = mean(score, na.rm = T))
mean_hour_plot <- ggplot(data=mean_hour,
aes(x=hour, y=mean_hour, group=1)) +
geom_line(color = 'red') +
ggtitle('시간대별 평점 평균 추이') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.title = element_text(face = 'bold', size = 15,
vjust=2, hjust=0.5))
grid.arrange(count_hour_plot, mean_hour_plot)
methods(print)
ldeaths
print(acf(ldeaths))
