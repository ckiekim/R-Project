html <- read_html(url)
html %>%
html_node('iframe.ifr') %>%
html_attr('src') -> if_url
ifr_url <- paste0(url_base, if_url)
html2 <- read_html(ifr_url)
page <- html_node(html2, 'div.paging')
page
html2 %>%
html_node('div.paging') %>%
html_nodes('a') -> pages
pages
for (page in pages) {
page_url <- html_attr(page, 'href')
print(page_url)
}
html2 %>%
html_node('div.paging') %>%
html_node('a') %>%
html_attr('href')
page_url <- str_sub(tmp, 1, -2)
page_url
html2 %>%
html_node('div.paging') %>%
html_node('a') %>%
html_attr('href') -> tmp
page_url <- str_sub(tmp, 1, -2)
page_url
page_url_base <- str_sub(tmp, 1, -2)
wb <- createWorkbook()
for (i in 1:10) {
page_url <- paste0(url_base, page_url_base, i, encoding="euc-kr")
html <- read_html(page_url)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
}
review <- data.frame(score=score, review=review, writer=writer, time=time)
sheetName <- paste0("page=", page)
addWorksheet(wb, sheetName)
writeDataTable(wb, sheetName, review)
}
saveWorkbook(wb, file="D:/Workspace/R_Project/01_Crawling/cine.xlsx")
wb <- createWorkbook()
for (i in 1:10) {
page_url <- paste0(url_base, page_url_base, i, encoding="euc-kr")
html <- read_html(page_url)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
}
review <- data.frame(score=score, review=review, writer=writer, time=time)
sheetName <- paste0("page=", i)
addWorksheet(wb, sheetName)
writeDataTable(wb, sheetName, review)
}
saveWorkbook(wb, file="D:/Workspace/R_Project/01_Crawling/cine.xlsx")
wb <- createWorkbook()
for (i in 1:10) {
page_url <- paste0(url_base, page_url_base, i, encoding="euc-kr")
print(page_url)
html <- read_html(page_url)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
rev <- str_sub(tmp, 1, idx[1]-1)
print(rev)
review <- c(review, rev)
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
}
review <- data.frame(score=score, review=review, writer=writer, time=time)
sheetName <- paste0("page=", i)
addWorksheet(wb, sheetName)
writeDataTable(wb, sheetName, review)
}
saveWorkbook(wb, file="D:/Workspace/R_Project/01_Crawling/cine.xlsx")
wb <- createWorkbook()
for (i in 1:10) {
page_url <- paste0(url_base, page_url_base, i)
print(page_url)
html <- read_html(page_url)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
rev <- str_sub(tmp, 1, idx[1]-1)
print(rev)
review <- c(review, rev)
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
}
review <- data.frame(score=score, review=review, writer=writer, time=time)
sheetName <- paste0("page=", i)
addWorksheet(wb, sheetName)
writeDataTable(wb, sheetName, review)
}
saveWorkbook(wb, file="D:/Workspace/R_Project/01_Crawling/cine.xlsx")
wb <- createWorkbook()
for (i in 1:10) {
page_url <- paste0(url_base, page_url_base, i)
#print(page_url)
html <- read_html(page_url)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
rev <- str_sub(tmp, 1, idx[1]-1)
#print(rev)
review <- c(review, rev)
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
}
review <- data.frame(score=score, review=review, writer=writer, time=time)
sheetName <- paste0("P", i)
addWorksheet(wb, sheetName)
writeDataTable(wb, sheetName, review)
}
saveWorkbook(wb, file="D:/Workspace/R_Project/01_Crawling/cine.xlsx")
library(xlsx)
df_points <- data.frame(score=c(), review=c(), writer=c(), time=c())
for (i in 1:10) {
page_url <- paste0(url_base, page_url_base, i)
#print(page_url)
html <- read_html(page_url)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
rev <- str_sub(tmp, 1, idx[1]-1)
#print(rev)
review <- c(review, rev)
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
}
points <- data.frame(score=score, review=review, writer=writer, time=time)
df_points <- rbind.data.frame(df_points, points)
}
write.xlsx(df_points, file="D:/Workspace/R_Project/01_Crawling/cine.xlsx",
sheetName="네티즌평점",
col.names=TRUE, row.names=TRUE, append=FALSE)
html2 %>%
html_node('div.score_total') %>%
html_text('em')
html2 %>%
html_node('div.paging') %>%
html_node('a') %>%
html_attr('href') -> tmp
html2 %>%
html_node('div.score_total') %>%
html_nodes('em') -> ems
ems
total_page <- ems[2]
total_page
total_page
total_page <- ems[2] %>% html_text()
total_page
total_page
pages <- ems[2] %>% html_text()
as.numeric(pages)
type(pages)
is.character(pages)
as.numeric("18210")
as.numeric("18,210")
html2 %>%
html_node('div.paging') %>%
html_node('a') %>%
html_attr('href') -> tmp
pages <- gsub(",", "", pages)
as.numeric(pages)
total_page <- ceiling(as.numeric(pages)/10)
total_page
df_points <- data.frame(score=c(), review=c(), writer=c(), time=c())
for (i in 1:total_page) {
page_url <- paste0(url_base, page_url_base, i)
#print(page_url)
html <- read_html(page_url)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
rev <- str_sub(tmp, 1, idx[1]-1)
#print(rev)
review <- c(review, rev)
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
}
points <- data.frame(score=score, review=review, writer=writer, time=time)
df_points <- rbind.data.frame(df_points, points)
}
write.xlsx(df_points, file="D:/Workspace/R_Project/01_Crawling/cine.xlsx",
sheetName="네티즌평점",
col.names=TRUE, row.names=TRUE, append=FALSE)
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
url_base <- 'https://movie.naver.com'
start_url <- '/movie/bi/mi/point.nhn?code=163788'
url <- paste0(url_base, start_url)
html <- read_html(url)
html %>%
html_node('iframe.ifr') %>%
html_attr('src') -> if_url
ifr_url <- paste0(url_base, if_url)
html2 <- read_html(ifr_url)
html2 %>%
html_node('div.score_total') %>%
html_nodes('em') -> ems
pages <- ems[2] %>% html_text()
pages <- gsub(",", "", pages)
total_page <- ceiling(as.numeric(pages)/10)
html2 %>%
html_node('div.paging') %>%
html_node('a') %>%
html_attr('href') -> tmp
page_url_base <- str_sub(tmp, 1, -2)
df_points <- data.frame(score=c(), review=c(), writer=c(), time=c())
for (i in 1:total_page) {
if (i %% 100 == 0)
print(i)
page_url <- paste0(url_base, page_url_base, i)
#print(page_url)
html <- read_html(page_url)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
rev <- str_sub(tmp, 1, idx[1]-1)
#print(rev)
review <- c(review, rev)
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
}
points <- data.frame(score=score, review=review, writer=writer, time=time)
df_points <- rbind.data.frame(df_points, points)
}
write.xlsx(df_points, file="D:/Workspace/R_Project/01_Crawling/cine.xlsx",
sheetName="네티즌평점",
col.names=TRUE, row.names=TRUE, append=FALSE)
write.xlsx(df_points, file="D:/Workspace/R_Project/01_Crawling/cine.xlsx",
sheetName="네티즌평점",
col.names=TRUE, row.names=FALSE, append=FALSE)
install.packages('RSelenium')
library(RSelenium)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445L, browserName="chrome")
remDr$open()
remDr$navigate("http://sancj.tistory.com/manage/")
remDr$navigate("https://nid.naver.com/nidlogin.login")
txt_id<-remDr$findElement(using="id",value="ckiekim")
txt_id<-remDr$findElement(using="id",value="id")
txt_pw <- remDr$findElement(using="id",value="pw")
login_btn <- remDr$findElement(using="class", value="btn_global")
txt_id$setElementAttribute("value", "ckiekim") # ★에 아이디 입력
txt_pw$setElementAttribute("value","dongbu-4522") # ★에 비밀번호 입력
login_btn$clickElement()
remDr$navigate("https://mail.naver.com/")
remDr$navigate("https://mail.naver.com/")
mail_title <- remDr$findElement(using="class", value="subject ")
mail_title <- remDr$findElement(using="class", value="subject")
mail_title
mail_title <- remDr$findElement(using = 'css selector', "subject")
mail_title <- remDr$findElement(using = 'css selector', "subject ")
mail_title <- remDr$findElement(using="class", value="subject")
# (using = 'css selector', "subject")
subjects<-unlist(lapply(mail_title, function(x){x$getElementText()}))
# (using = 'css selector', "subject")
mail_title$getElement
# (using = 'css selector', "subject")
mail_title$getElement()
# (using = 'css selector', "subject")
mail_title$getElementText()
mail_subject <- remDr$findElement(using="class", value="subject")
# (using = 'css selector', "subject")
mail_subject$getElementText()
remDr$close()
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
url_base <- 'https://movie.naver.com'
start_url <- '/movie/bi/mi/point.nhn?code=163788'
url <- paste0(url_base, start_url)
html <- read_html(url)
html %>%
html_node('iframe.ifr') %>%
html_attr('src') -> if_url
ifr_url <- paste0(url_base, if_url)
html2 <- read_html(ifr_url)
# 총 데이터 건수로부터 총 페이지수 구하기
html2 %>%
html_node('div.score_total') %>%
html_nodes('em') -> ems
pages <- ems[2] %>% html_text()
pages <- gsub(",", "", pages)
total_page <- ceiling(as.numeric(pages)/10)
# 페이지별 url 기본 구하기
html2 %>%
html_node('div.paging') %>%
html_node('a') %>%
html_attr('href') -> tmp
page_url_base <- str_sub(tmp, 1, -2)
# 평점 데이터를 저장할 데이터프레임 초기화
df_points <- data.frame(score=c(), review=c(), writer=c(), time=c())
for (i in 1:total_page) {
if (i %% 100 == 0)
print(i)
page_url <- paste0(url_base, page_url_base, i)
html <- read_html(page_url)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
rev <- str_sub(tmp, 1, idx[1]-1)
#print(rev)
review <- c(review, rev)
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
}
points <- data.frame(score=score, review=review, writer=writer, time=time)
df_points <- rbind.data.frame(df_points, points)
}
write.xlsx(df_points, file="D:/Workspace/R_Project/01_Crawling/cine.xlsx",
sheetName="네티즌평점",
col.names=TRUE, row.names=FALSE, append=FALSE)
# Naver 에 로그인하기
library(RSelenium)
library(rvest)
remDr<-remoteDriver(remoteServerAddr="localhost", port=4445L, browserName="chrome")
remDr$open()
remDr$navigate("https://nid.naver.com/nidlogin.login")
txt_id <- remDr$findElement(using="id", value="id")
txt_pw <- remDr$findElement(using="id", value="pw")
login_btn <- remDr$findElement(using="class", value="btn_global")
txt_id$setElementAttribute("value", "ckiekim") # 아이디 입력
txt_pw$setElementAttribute("value", "dongbu-4522")
login_btn$clickElement()
remDr$navigate("https://mail.naver.com/")
mail_subjects <- remDr$findElement(using="class", value="subject")
# (using = 'css selector', "subject")
mail_subjects$getElementText()
mail_subjects <- remDr$findElement(using="class", value="mail_title")
# (using = 'css selector', "subject")
mail_subjects
subjects<-unlist(lapply(mail_subjects, function(x){x$getElementText()}))
mail_subjects$getElementText()
mail_subjects <- remDr$findElement(using="class", value="mail_List")
mail_subjects <- remDr$findElement(using="class", value="list_for_view")
remDr$navigate("https://mail.naver.com/")
mail_subjects <- remDr$findElement(using="class", value="list_for_view")
mail_subjects <- remDr$findElement(using="id", value="list_for_view")
# (using = 'css selector', "subject")
mail_subjects
mail_subjects$getElementText()
mail_texts <- remDr$findElement(using="id", value="list_for_view")
mail_texts <- mail_texts$getElementText()
mail_texts
library(stringr)
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
str_split(mail_texts, '\n')
tmp <- str_split(mail_texts, '\n') %>% .[[1]]
tmp
sender <- c()
subject <- c()
time <- c()
for (i in 1:20) {
sender <- c(sender, tmp[4*i-3])
subject <- c(subject, tmp[4*i-2])
time <- c(time, tmp[4*i-1])
}
df_mail <- data.frame(sender=sender, subject=subject, time=time)
df_mail
remDr$close()
setwd('D:/Workspace/R_Project/01_Crawling')
list.files()
